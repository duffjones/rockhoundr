@page
@model IndexModel

<!DOCTYPE html>
<html>
<head>
    <meta charset='utf-8' />
    <meta name='viewport' content='initial-scale=1,maximum-scale=1,user-scalable=no' />
    <link href='https://api.mapbox.com/mapbox-gl-js/v0.42.0/mapbox-gl.css' rel='stylesheet' />
    <link href="https://cdn.jsdelivr.net/npm/tailwindcss/dist/tailwind.min.css" rel="stylesheet">
    <link href="~/headerstyle.css" rel="stylesheet" type="text/css" />
    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.min.css" />

    <style>
        body {
            margin: 0;
            padding: 0;
        }

        #map {
            position: absolute;
            top: 10%;
            bottom: 10%;
            left: 25%;
            width: 60%;
        }

                testy {
    object-fit:contain;
}

    </style>



</head>
<body>
    <div class="header">
        <a href="#default" class="logo">CompanyLogo</a>
    </div>

    <div id='map' class="center-div">

    </div>

    <div class="absolute pin-t pin-r w-1/5 mt-4 mr-4">
        <input type="search" id="address-input" placeholder="Search..." />
    </div>


    <div id="info-card" class="absolute pin-l mt-4 ml-4 rounded shadow-lg bg-white" style="max-width: 400px; display: none;">

        <div class="overflow-hidden" style="height:200px;">
            <span class="absolute pin-t pin-r px-4 py-3">
                <i id="info-card-close-button" class="fa fa-times" role="button" aria-hidden="true"></i>
            </span>
            <div class="testy">
                <img class="testy" id="airport-image" src="http://via.placeholder.com/400x200?text=Loading..." />
            </div>
        </div>

        <div class="px-6 py-4">
            <div id="airport-name" class="font-bold text-l">Airport Name goes here</div>

            <div id="more-info" class="mt-8">
                <div class="flex mb-4">
                    <div class="w-10"><i class="fa fa-map-marker" aria-hidden="true"></i></div>
                    <div id="mine-minerals" class="font-medium text-l mb-2 w-full"></div>
                </div>

                <div class="flex mb-4">
                    <div class="w-10"><i class="fa fa-phone" aria-hidden="true"></i></div>
                    <div id="mine-raregems" class="font-medium text-l mb-2 w-full"></div>
                </div>
            </div>
        </div>
    </div>

    <script src='https://api.mapbox.com/mapbox-gl-js/v0.42.0/mapbox-gl.js'></script>
    <script src="https://cdn.jsdelivr.net/npm/places.js@1.4.15"></script>

    <script>
    mapboxgl.accessToken = '@Model.MapboxAccessToken';
    var map = new mapboxgl.Map({
        container: 'map',
        style: 'mapbox://styles/mapbox/outdoors-v10',
        center: [@Model.InitialLongitude, @Model.InitialLatitude], // starting position [lng, lat]
        zoom: @Model.InitialZoom // starting zoom
    });

    var nav = new mapboxgl.NavigationControl();
    map.addControl(nav, 'bottom-right');

    map.on('load',
        () => {
            map.addSource("airports",
                {
                    type: "geojson",
                    data: "?handler=airports",
                    cluster: true, // Enable clustering
                    clusterRadius: 50, // Radius of each cluster when clustering points
                    clusterMaxZoom: 6 // Max zoom to cluster points on
                });

            map.addLayer({
                id: 'clusters',
                type: 'circle',
                source: 'airports',
                filter: ['has', 'point_count'],
                paint: {
                    'circle-color': {
                        property: 'point_count',
                        type: 'interval',
                        stops: [
                            [0, '#41A337'],
                            [100, '#2D7026'],
                            [750, '#0B5703'],
                        ]
                    },
                    'circle-radius': {
                        property: 'point_count',
                        type: 'interval',
                        stops: [
                            [0, 20],
                            [100, 30],
                            [750, 40]
                        ]
                    }
                }
            });

            map.addLayer({
                id: 'cluster-count',
                type: 'symbol',
                source: 'airports',
                filter: ['has', 'point_count'],
                layout: {
                    'text-field': '{point_count}',
                    'text-font': ['DIN Offc Pro Medium', 'Arial Unicode MS Bold'],
                    'text-size': 12
                }
            });

            map.addLayer({
                id: 'airport',
                type: 'circle',
                source: 'airports',
                filter: ['!has', 'point_count'],

                'paint': {
                    // make circles larger as the user zooms from z12 to z22
                    'circle-radius': 6,
                    'circle-stroke-width': 1,

                'circle-color': [
                    'match',
                    ['get', 'minerals'],
                    'Gold', '#fbb03b',
                    'Silver', '#ccc',
                    'Lead', '#ccc',
                    'Copper', '#f4a460',
                    'Uranium', '#8b0000',
                    /* other */ '#1e90ff'
                    ]
                    }
            });

            // Create a popup, but don't add it to the map yet.
            var popup = new mapboxgl.Popup({
                closeButton: false,
                closeOnClick: true
            });

            map.on('mouseenter', 'airport', function(e) {
                // Change the cursor style as a UI indicator.
                map.getCanvas().style.cursor = 'pointer';

                // Populate the popup and set its coordinates
                // based on the feature found.
                popup.setLngLat(e.features[0].geometry.coordinates)
                    .setHTML(e.features[0].properties.name)
                    .addTo(map);
            });

            map.on('mouseleave', 'airport', function() {
                map.getCanvas().style.cursor = '';
                popup.remove();
            });

            map.on('click', 'airport', e => {

                var name = e.features[0].properties.name;
                var minerals = e.features[0].properties.minerals;
                var raregems = e.features[0].properties.raregems;
                var lat = e.features[0].geometry.coordinates[1];
                var lng = e.features[0].geometry.coordinates[0];

                // Display airport info
                document.querySelector('#airport-name').innerText = name + " (" + minerals + ")";
                document.querySelector('#airport-image').src = 'http://via.placeholder.com/400x200?text=Loading...';

                // Hide more info at first
                //document.querySelector('#more-info').style.display = 'none';

                // Ensure the info box is visible
                document.querySelector('#info-card').style.display = '';

                if (minerals.includes("Copper")) {
                    document.querySelector('#airport-image').src = 'https://imgur.com/r/FidgetSpinners/0SZvtIW';
                }

                 else if (minerals.includes("Silver")) {
                    document.querySelector('#airport-image').src = 'https://i.imgur.com/ehOF1eU.png';
                }

                 else if (minerals.includes("Gold")) {
                    document.querySelector('#airport-image').src = 'https://i.imgur.com/grdpiDu.gif?1';
                }
                else {

                            document.querySelector('#airport-image').src = 'http://via.placeholder.com/400x200?text=Error+while+loading+data';
                }
                            document.querySelector('#mine-minerals').innerText =  minerals;
                            document.querySelector('#mine-raregems').innerText = raregems;
            });
        });

    var placesAutocomplete = places({
        container: document.querySelector('#address-input'),
        type: 'city'
    });

    placesAutocomplete.on('change', e => {
        map.flyTo({
            center: [ e.suggestion.latlng.lng, e.suggestion.latlng.lat],
            zoom: 9
        });
    });

    document.querySelector('#info-card-close-button').addEventListener('click', function(event) {
        document.querySelector('#info-card').style.display = 'none';
    });
    </script>
</body>
</html>